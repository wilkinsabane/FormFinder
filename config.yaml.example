# FormFinder Configuration Template
# Copy this file to config.yaml and customize for your environment

# API Configuration
api:
  football_data:
    # Your football data API token (required)
    # Get one from: https://www.football-data.org/client/register
    api_key: "${FOOTBALL_DATA_API_KEY:YOUR_API_TOKEN_HERE}"
    
    # Base URL for the API
    base_url: "https://api.football-data.org/v4"
    
    # Rate limiting configuration
    rate_limit:
      requests_per_minute: 10
      requests_per_day: 100
    
    # Request timeout configuration
    timeout:
      connect: 10.0
      read: 30.0
    
    # Retry configuration
    max_retries: 3
    retry_delay: 1.0
    backoff_factor: 2.0

# Database Configuration
database:
  # Database type: sqlite or postgresql
  type: "sqlite"
  
  # SQLite configuration (for local development)
  sqlite:
    path: "data/formfinder.db"
  
  # PostgreSQL configuration (for production)
  postgresql:
    host: "${DATABASE_HOST:localhost}"
    port: 5432
    database: "${DATABASE_NAME:formfinder}"
    username: "${DATABASE_USER:formfinder}"
    password: "${DATABASE_PASSWORD:your_password}"
    
  # Connection pool settings
  pool_size: 5
  max_overflow: 10
  pool_timeout: 30
  pool_recycle: 3600
  
  # Enable SQL query logging (development only)
  echo: false

# Data Processing Configuration
processing:
  # Leagues to process (competition IDs from football-data.org)
  leagues:
    - id: 2021  # Premier League
      name: "Premier League"
      country: "England"
    - id: 2014  # La Liga
      name: "La Liga"
      country: "Spain"
    - id: 2002  # Bundesliga
      name: "Bundesliga"
      country: "Germany"
    - id: 2019  # Serie A
      name: "Serie A"
      country: "Italy"
    - id: 2015  # Ligue 1
      name: "Ligue 1"
      country: "France"
  
  # Data freshness settings
  max_age_hours: 24
  force_refresh: false
  
  # Historical data settings
  seasons_to_fetch: 3
  include_current_season: true
  
  # Form calculation settings
  form_window_games: 5
  home_away_weight: 1.2
  recent_weight: 1.5
  
  # Prediction settings
  min_games_for_prediction: 5
  confidence_threshold: 0.6
  
  # Performance settings
  batch_size: 100
  parallel_processing: true
  max_workers: 4

# Feature Computation Configuration
feature_computation:
  batch_processing:
    batch_size: 50
    max_concurrent_batches: 3
    retry_attempts: 3
    retry_delay_seconds: 5
    timeout_seconds: 300
  
  form_analysis:
    lookback_days: 30
    min_matches_required: 3
    weight_recent_matches: true
    home_away_separate: true
  
  h2h_analysis:
    max_h2h_matches: 10
    min_h2h_matches: 1
    include_neutral_venue: false
    weight_by_recency: true
  
  data_quality:
    min_feature_completeness: 0.8
    max_missing_percentage: 0.2
    outlier_detection_enabled: true
    outlier_threshold_std: 3.0
  
  api_usage:
    max_requests_per_hour: 50
    quota_warning_threshold: 0.8
    quota_critical_threshold: 0.95
    backoff_on_limit: true
  
  caching:
    feature_cache_ttl_hours: 6
    h2h_cache_ttl_hours: 24
    form_cache_ttl_hours: 12
    max_cache_size_mb: 500
  
  computation_priority:
    upcoming_fixtures: 1
    recent_fixtures: 2
    historical_fixtures: 3
    backfill_fixtures: 4

# Training Configuration
training:
  data_settings:
    min_training_samples: 1000
    validation_split: 0.2
    test_split: 0.1
    random_state: 42
    stratify_by_league: true
  
  feature_engineering:
    scaling_method: "standard"  # standard, minmax, robust
    handle_missing: "median"    # median, mean, drop
    feature_selection: true
    max_features: 50
    correlation_threshold: 0.95
  
  model_selection:
    algorithm: "xgboost"  # xgboost, lightgbm, catboost
    hyperparameter_tuning: true
    cv_folds: 5
    scoring_metric: "rmse"
    retrain_threshold_hours: 24
  
  xgboost_params:
    n_estimators: 100
    max_depth: 6
    learning_rate: 0.1
    subsample: 0.8
    colsample_bytree: 0.8
    random_state: 42
    n_jobs: -1
  
  validation:
    min_accuracy_threshold: 0.6
    max_rmse_threshold: 1.5
    performance_degradation_threshold: 0.1
    cross_validation_enabled: true
  
  model_persistence:
    save_path: "models/"
    model_format: "joblib"  # joblib, pickle
    keep_versions: 5
    auto_backup: true

# Notification Configuration
notifications:
  # Enable/disable notifications
  enabled: true
  
  # Email notifications
  email:
    enabled: false
    smtp_server: "smtp.gmail.com"
    smtp_port: 587
    username: "${EMAIL_USERNAME:your_email@gmail.com}"
    password: "${EMAIL_PASSWORD:your_app_password}"
    from_address: "${EMAIL_FROM:formfinder@yourdomain.com}"
    to_addresses:
      - "recipient@example.com"
    use_tls: true
    
  # SMS notifications (Twilio)
  sms:
    enabled: false
    account_sid: "${TWILIO_ACCOUNT_SID:your_account_sid}"
    auth_token: "${TWILIO_AUTH_TOKEN:your_auth_token}"
    from_number: "${TWILIO_FROM_NUMBER:+1234567890}"
    to_numbers:
      - "+1234567890"
  
  # Webhook notifications
  webhook:
    enabled: false
    url: "${WEBHOOK_URL:https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK}"
    method: "POST"
    headers:
      Content-Type: "application/json"
    
  # Notification triggers
  triggers:
    pipeline_success: true
    pipeline_failure: true
    high_confidence_predictions: true
    data_quality_issues: true
    system_health_alerts: true

# Logging Configuration
logging:
  # Log level: DEBUG, INFO, WARNING, ERROR, CRITICAL
  level: "INFO"
  
  # Log format
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
  
  # File logging
  file:
    enabled: true
    path: "data/logs/formfinder.log"
    max_size_mb: 10
    backup_count: 5
    rotation: "time"  # time or size
    
  # Console logging
  console:
    enabled: true
    colored: true
    
  # Structured logging
  structured:
    enabled: true
    format: "json"
    
  # Log specific modules
  loggers:
    formfinder.api: "INFO"
    formfinder.database: "INFO"
    formfinder.workflows: "INFO"
    sqlalchemy.engine: "WARNING"
    urllib3.connectionpool: "WARNING"

# Workflow Configuration
workflows:
  # Prefect configuration
  prefect:
    # Server URL (leave empty for local)
    server_url: ""
    
    # Work pool configuration
    work_pool: "default"
    
    # Flow run configuration
    flow_run_name_template: "formfinder-{flow_name}-{timestamp}"
    
  # Scheduling
  scheduling:
    # Main pipeline schedule (cron format)
    main_pipeline: "0 6 * * *"  # Daily at 6 AM
    
    # Quick update schedule
    quick_update: "0 */4 * * *"  # Every 4 hours
    
    # Health check schedule
    health_check: "*/15 * * * *"  # Every 15 minutes
    
    # Timezone for scheduling
    timezone: "UTC"
    
  # Task configuration
  tasks:
    # Task timeouts (seconds)
    fetch_timeout: 300
    process_timeout: 600
    predict_timeout: 180
    notify_timeout: 60
    
    # Retry configuration
    max_retries: 2
    retry_delay: 30
    
    # Concurrency limits
    max_concurrent_tasks: 3

# Enhanced Monitoring Configuration
monitoring:
  health_checks:
    enabled: true
    interval_seconds: 300
    database_timeout: 5.0
    api_timeout: 10.0
    disk_space_threshold: 0.9
    memory_threshold: 0.85
    cpu_threshold: 0.9
  
  performance_tracking:
    enabled: true
    metrics_retention_days: 30
    track_feature_computation: true
    track_training_performance: true
    track_api_usage: true
  
  alerting:
    enabled: true
    email_enabled: true
    sms_enabled: false
    
    thresholds:
      critical_error_count: 5
      warning_error_count: 10
      api_quota_warning: 0.8
      api_quota_critical: 0.95
      disk_space_warning: 0.8
      disk_space_critical: 0.9
      memory_warning: 0.8
      memory_critical: 0.9
  
  notifications:
    email_recipients:
      - "admin@example.com"
    sms_recipients:
      - "+1234567890"
    notification_cooldown_minutes: 30

# Scheduler Configuration
scheduler:
  enabled: true
  timezone: "UTC"
  
  schedules:
    feature_computation: "0 */6 * * *"    # Every 6 hours
    historical_backfill: "0 1 * * 0"      # Weekly on Sunday at 1 AM
    model_training: "0 2 * * *"           # Daily at 2 AM
    data_quality_check: "0 */12 * * *"    # Every 12 hours
    cache_maintenance: "0 3 * * *"        # Daily at 3 AM
    health_check: "*/15 * * * *"          # Every 15 minutes
    monitoring: "*/5 * * * *"             # Every 5 minutes
    cleanup: "0 4 * * 0"                 # Weekly on Sunday at 4 AM
  
  job_management:
    max_concurrent_jobs: 3
    job_timeout_minutes: 60
    retry_failed_jobs: true
    max_retries: 3
    retry_delay_minutes: 15
    persist_job_history: true
    job_history_retention_days: 30

# Security Configuration
security:
  # API key encryption
  encrypt_api_keys: false
  encryption_key: "${ENCRYPTION_KEY:}"
  
  # Database security
  database_ssl: false
  ssl_cert_path: ""
  ssl_key_path: ""
  ssl_ca_path: ""
  
  # Access control
  allowed_hosts:
    - "localhost"
    - "127.0.0.1"
    
  # Rate limiting
  rate_limiting:
    enabled: true
    requests_per_minute: 60
    burst_limit: 10

# Development Configuration
development:
  # Debug mode
  debug: false
  
  # Development database
  use_test_database: false
  test_database_path: "data/test_formfinder.db"
  
  # Mock API responses
  mock_api: false
  mock_data_path: "tests/fixtures"
  
  # Development server
  dev_server:
    enabled: false
    host: "localhost"
    port: 8080
    auto_reload: true
    
  # Profiling
  profiling:
    enabled: false
    output_dir: "data/profiles"
    
# Environment-specific overrides
# These can be set via environment variables
environment:
  name: "${FORMFINDER_ENV:development}"
  
  # Environment-specific settings
  production:
    logging:
      level: "WARNING"
      console:
        enabled: false
    database:
      echo: false
    development:
      debug: false
      
  development:
    logging:
      level: "DEBUG"
      console:
        enabled: true
        colored: true
    database:
      echo: true
    development:
      debug: true
      
  testing:
    logging:
      level: "ERROR"
    database:
      type: "sqlite"
      sqlite:
        path: ":memory:"
    development:
      debug: false
      mock_api: true